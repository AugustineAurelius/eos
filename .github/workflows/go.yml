# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Fix Docker permissions
      run: sudo chmod 666 /var/run/docker.sock
    
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker
      uses: actions/setup-docker@v3
      with:
        docker-version: 20.10.14

    - name: Install Docker Compose
      run: |
        sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.22.2'
        
    - name: Install dependencies
      run: go get .

    - name: Build
      run: go build -v ./...
    
    - name: Run Docker Compose
      working-directory: ./example/repository
      run: docker compose up -d

    - name: Wait for services to be ready
      run: |
          # Add commands to wait for services to start if necessary
          sleep 5

    - name: Test
      env:
        DOCKER_HOST: unix:///var/run/docker.sock
      run: go test -v ./...


    - name: Stop Docker Compose services
      working-directory: ./example/repository
      run: docker compose down
      if: always()
