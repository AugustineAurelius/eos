version: "3.8" 

services:
  postgresql-master:
    image: docker.io/bitnami/postgresql:17
    ports:
      - '5432:5432'
    volumes:
      - 'postgresql_master_data:/bitnami/postgresql'
    environment:
      - POSTGRESQL_PGAUDIT_LOG=READ,WRITE
      - POSTGRESQL_LOG_HOSTNAME=true
      - POSTGRESQL_REPLICATION_MODE=master
      - POSTGRESQL_REPLICATION_USER=repl_user
      - POSTGRESQL_REPLICATION_PASSWORD=repl_password
      - POSTGRESQL_USERNAME=postgres
      - POSTGRESQL_DATABASE=postgres
      - POSTGRESQL_PASSWORD=postgres
    healthcheck:
      test: pg_isready -U postgres -d postgres
      interval: 5s
      timeout: 5s
      retries: 5
  postgres-exporter:
    image: quay.io/prometheuscommunity/postgres-exporter
    environment:
      DATA_SOURCE_NAME: "postgresql://postgres:postgres@postgres:5432/postgres?sslmode=disable"
    ports:
      - "9187:9187"
  postgresql-slave:
    image: docker.io/bitnami/postgresql:17
    ports:
      - '5433:5432'
    depends_on:
      postgresql-master:
        condition: service_healthy
    volumes: 
      - 'postgresql_slave_data:/bitnami/postgresql'
    environment:
      - POSTGRESQL_USERNAME=postgres
      - POSTGRESQL_PASSWORD=postgres
      - POSTGRESQL_MASTER_HOST=postgresql-master
      - POSTGRESQL_PGAUDIT_LOG=READ
      - POSTGRESQL_LOG_HOSTNAME=true
      - POSTGRESQL_REPLICATION_MODE=slave
      - POSTGRESQL_REPLICATION_USER=repl_user
      - POSTGRESQL_REPLICATION_PASSWORD=repl_password
      - POSTGRESQL_MASTER_PORT_NUMBER=5432


  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.116.1
    command: ["--config=/etc/otel-collector.yaml"]
    volumes:
      - ./otel-collector.yaml:/etc/otel-collector.yaml
    ports:
      - 4317:4317

  jaeger:
    image: jaegertracing/all-in-one:1.60
    ports:
      - 16686:16686

  prometheus:
    image: prom/prometheus:v3.0.1
    volumes:
      - ./prometheus.yaml:/etc/prometheus/prometheus.yml
    ports:
      - 9090:9090


  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus




volumes:
  postgresql_master_data:
    driver: local
  postgresql_slave_data: 
    driver: local
  grafana_data:
  minio_data: