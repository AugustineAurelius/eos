//Code generated by generator, DO NOT EDIT.
package {{.PackageName}}

import (
	"context"
	"fmt"

	sq "github.com/Masterminds/squirrel"
)

// Save{{.MessageName}} saves a {{.MessageName}} (creates if ID is zero, updates otherwise).
func (r *CommandRepository) Save(ctx context.Context, model *{{.MessageName}}) error {
	{{- if .WithDefaultID}}
	if model.ID == 0 {
		return r.Create(ctx, model)
	}
	return r.Update(ctx, NewUpdate({{- range $i, $field := .Fields -}}{{if ne $field.Name "ID"}}{{if $i}}, {{end}}WithUpdate{{.Name}}(model.{{.Name}}){{end}}{{end}}), WithID(model.ID))
	{{- else}}
	// Check if record exists by trying to get it
	_, err := r.Get(ctx, WithID(model.ID))
	if err != nil {
		// If not found, create new record
		return r.Create(ctx, model)
	}
	// If found, update existing record
	return r.Update(ctx, NewUpdate({{- range $i, $field := .Fields -}}{{if ne $field.Name "ID"}}{{if $i}}, {{end}}WithUpdate{{.Name}}(model.{{.Name}}){{end}}{{end}}), WithID(model.ID))
	{{- end}}
}
