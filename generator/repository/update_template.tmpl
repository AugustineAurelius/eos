//Code generated by generator, DO NOT EDIT.
package {{.PackageName}}

import (
	"context"
	"fmt"
	sq "github.com/Masterminds/squirrel"
)
// Update{{.MessageName}} updates an existing {{.MessageName}} in the database.
func (r *CommandRepository) Update(ctx context.Context, u Update, opts ...FilterOpt) error {
  var b sq.UpdateBuilder
	switch r.placeholder {
	case DollarWildcard:
	  b = sq.Update(Table{{.MessageName}}).PlaceholderFormat(sq.Dollar)
  default:
	  b = sq.Update(Table{{.MessageName}}).PlaceholderFormat(sq.Question)
  }

	f := &Filter{}
	for i := 0; i < len(opts); i++ {
		opts[i](f)
	}
	b = ApplyWhere(b, *f)
  b = ApplySet(b, u)

	query, args := b.MustSql()
	if _, err := r.runner.ExecContext(ctx, query, args...); err != nil {
		return fmt.Errorf("failed to exec update query %s with args %v", query, args)
	}
	return nil 
}
