openapi: 3.0.3
info:
  title:  github.com/AugustineAurelius/fuufu
  version: 1.0.0
servers:


paths:
  /api/v1/todo:
    get: 
      summary: Get Todo list
      operationId: GetAllTodos
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TodosResponse'
        '500':
          description: Internall error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post: 
      summary: Creates a new task
      operationId: CreateNewTask
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
      responses:
        '201':
          description: Task Successfuly created
          content:
            application/json:
              schema:
                properties:
                  task_id:
                    type: string
                    format: uuid
                required: [task_id]
        '500':
          description: Internall error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/todo/{todo_id}:
    get:
      summary: Get task by todo_id
      operationId: GetTaskByID
      parameters:
        - name: todo_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Task Successfuly finded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '404':
          description: Task not found
        '500':
          description: Internall error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
                
    delete:
      summary: delete task by todo_id
      operationId: DeleteTaskByID
      parameters:
        - name: todo_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Task Successfuly deleted
        '404':
          description: Task not found
        '500':
          description: Internall error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'



components:
  parameters:
    
  schemas:
    WeAll:
      type: string
      enum: [you, me]

    TaskCreate:
      type: object
      required: [name, doer, do_before, repeatable, created_by, range]
      properties:
        name:
          type: string
          example: Clen cat's poo
        doer: 
          $ref: '#/components/schemas/WeAll'
        description:
          type: string
          nullable: true
        do_before:
          type: string
          format: "date-time"
        repeatable:
          type: boolean
        created_by:
          $ref: '#/components/schemas/WeAll'
        range:
          type: integer
          example: repeat every 5 days
          nullable: true
          
    Task:
      type: object
      required: [id, name, doer, do_before, repeatable, created_by, done, range]
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          example: Clen cat's poo
        doer: 
          $ref: '#/components/schemas/WeAll'
        description:
          type: string
          nullable: true
        do_before:
          type: string
          format: "date-time"
        repeatable:
          type: boolean
        created_by:
          $ref: '#/components/schemas/WeAll'
        done:
          type: boolean
        range:
          type: integer
          example: repeat every 5 days
          nullable: true

    TodosResponse:
      type: object
      properties:
        tasks:
          type: array
          items:
            $ref: '#/components/schemas/Task'
      required:
        - tasks


    ErrorResponse:
      type: object
      properties:
        error:
          type: string
          example: "Error message"
      required:
        - error
